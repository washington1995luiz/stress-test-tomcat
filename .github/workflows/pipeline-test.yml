name: Application CI/CD TEST

on:
  workflow_dispatch:
#  push:
#    branches:
#      - '*'
#      - '!master'
#      - '!main'
#  pull_request:
#    types: [closed]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build image without Docker
        run: mvn spring-boot:build-image -DskipTests

  deploy:
    name: "[DEV] - Deploy"
    runs-on: ubuntu-latest
    needs: build

    env:
      SERVICE_NAME: "stress-test-tomcat"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set Git Config
        run: |
          git config --global user.email "$(git --no-pager show -s --format='%ae')"
          git config --global user.name "$(git --no-pager show -s --format='%an')"

      - name: Login to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate random tag
        id: random_tag
        run: echo "TAG=$(echo ${GITHUB_SHA::4})" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        id: docker_build
        run: |
          mvn spring-boot:build-image \
          -Dspring-boot.build-image.imageName=${{ secrets.DOCKER_USERNAME }}/${{ env.SERVICE_NAME }}:${{ steps.random_tag.outputs.TAG }} \
          -Dspring-boot.build-image.publish=true \
          -DskipTests

      - name: Argocd - Update Deployment Configuration
        run: |
          git clone https://${{ secrets.PASSWORD_GIT_CI }}@github.com/washington1995luiz/argocd.git
          cd argocd/apps/services/${{ env.SERVICE_NAME }}/
          cp deployment.yaml deployment.yaml.old
          sed -i "s/image:.*$/image: ${{ secrets.DOCKER_USERNAME }}\/${{ env.SERVICE_NAME }}:${{ steps.random_tag.outputs.TAG }}/" deployment.yaml
          git add deployment.yaml.old
          git add deployment.yaml
          git commit -m "[${{ env.SERVICE_NAME }}] - Update Docker image tag: ${{ steps.random_tag.outputs.TAG }}"
          git push origin master
          echo "Check Deploy in ArgoCD Application"